#cloud-config
ssh_authorized_keys:
  - %(LOCAL_SSH_KEY)s
apt_sources:
- source: "deb https://artifacts.elastic.co/packages/5.x/apt stable main"
- source: "deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main"
bootcmd:
- set -ex
- cloud-init-per once apt-update apt-get update
- cloud-init-per once fallocate-swapfile fallocate -l 4G /swapfile
- cloud-init-per once chmod-swapfile chmod 600 /swapfile
- cloud-init-per once mkswap-swapfile mkswap /swapfile
- cloud-init-per once curl-nodeinstall curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
- cloud-init-per once aptkeyget-elasticsearch wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch > /etc/apt/es_gpg_key
- cloud-init-per once aptkeyadd-elasticsearch apt-key add /etc/apt/es_gpg_key
- cloud-init-per once aptkeyget-postgres wget -qO - https://www.postgresql.org/media/keys/ACCC4CF8.asc > /etc/apt/pg_gpg_key
- cloud-init-per once aptkeyadd-postgres apt-key add /etc/apt/pg_gpg_key
packages:
- awscli
- git
- unattended-upgrades
# apache
- apache2
- apache2-dev
- apache2-utils
- ssl-cert
- libapache2-mod-wsgi-py3
# cloudwatchmon
# encoded app install
## ckeditor
- bsdtar
## Pillow
- libjpeg8-dev
- zlib1g-dev
## psycopg2
- libpq-dev
# es
- apt-transport-https
- elasticsearch
# node
- nodejs
## node optional installed for native add-ons
- g++
- gcc
- make
# postgresql
- daemontools
- postgresql-11
# python
- build-essential
- libbz2-dev
- libdb-dev
- libffi-dev
- libgdbm-dev
- liblzma-dev
- libncurses5-dev
- libnss3-dev
- libreadline-dev
- libssl-dev
- libsqlite3-dev
- python3-dev
- python3-venv
- zlib1g-dev
# redis
- redis-server
# wal-e
- lzop
# # unknown - Leaving these here for a bit just in case
# - graphviz
# - libevent-dev
# - libmagic-dev
# - libxml2-dev
# - libxslt1-dev
# - ntp
# - pv
# - ruby-dev
# - update-notifier-common
# - bsd-mailx
power_state:
  mode: reboot
output:
  all: '| tee -a /var/log/cloud-init-output.log'
runcmd:
- cloud-init-per once encd-git-repo sudo -u ubuntu git clone %(GIT_REPO)s /home/ubuntu/encoded
- cloud-init-per once encd-git-branch sudo -u ubuntu git -C /home/ubuntu/encoded checkout -b %(GIT_BRANCH)s %(GIT_REMOTE)s/%(GIT_BRANCH)s
- cloud-init-per once encd-post-boot sudo -u ubuntu %(CC_DIR)s/ami-pre.sh
- cloud-init-per once encd-java sudo -u ubuntu %(CC_DIR)s/ami-java.sh
- cloud-init-per once encd-redis sudo -u ubuntu %(CC_DIR)s/ami-redis.sh
- cloud-init-per once encd-elasticsearch sudo -u ubuntu %(CC_DIR)s/ami-elasticsearch.sh 'DEMO'
- cloud-init-per once encd-cloudwatch sudo -u ubuntu %(CC_DIR)s/ami-cloudwatchmon.sh
- cloud-init-per once encd-pre sudo -u ubuntu %(CC_DIR)s/ami-preapp.sh
- cloud-init-per always encd-app sudo -u ubuntu %(CC_DIR)s/app-wrapper.sh %(BATCHUPGRADE_VARS)s
users:
- default
- name: build
  gecos: Build user
  inactive: true
  system: true
  shell: /bin/bash
- name: encoded
  gecos: ENCODE Metadata Database daemon user
  inactive: true
  system: true
  homedir: /srv/encoded
  shell: /bin/bash
write_files:
- path: /etc/vim/vimrc
  append: true
  content: |
    set number
    filetype plugin indent on
    set tabstop=4
    set shiftwidth=4
    set expandtab
- path: /etc/environment
  append: true
  content: |
    encd_failed_flag=/home/ubuntu/.encd_failed_flag
    ENCD_APP_WORKERS=%(APP_WORKERS)s
    ENCD_BATCHUPGRADE_VARS='%(BATCHUPGRADE_VARS)s'
    ENCD_BUILD_TYPE=encd-demo-build
    ENCD_CC_DIR=%(CC_DIR)s
    ENCD_CLUSTER_NAME=%(CLUSTER_NAME)s
    ENCD_ES_IP=%(ES_IP)s
    ENCD_ES_PORT=%(ES_PORT)s
    ENCD_ES_OPT_FILENAME=%(ES_OPT_FILENAME)s
    ENCD_FULL_BUILD=False
    ENCD_GIT_BRANCH=%(GIT_BRANCH)s
    ENCD_GIT_REMOTE=%(GIT_REMOTE)s
    ENCD_GIT_REPO=%(GIT_REPO)s
    ENCD_HOME=/srv/encoded
    ENCD_INSTALL_TAG=encd-install
    ENCD_JVM_GIGS=%(JVM_GIGS)s
    ENCD_PG_VERSION=%(PG_VERSION)s
    ENCD_PY3_PATH=/usr/bin/python3.6
    ENCD_REDIS_PORT=%(REDIS_PORT)s
    ENCD_REGION_INDEX=%(REGION_INDEX)s
    ENCD_ROLE=%(ROLE)s
    ENCD_S3_AUTH_KEYS=%(S3_AUTH_KEYS)s
    ENCD_WALE_S3_PREFIX=%(WALE_S3_PREFIX)s
- path: /etc/apt/apt.conf.d/20auto-upgrades
  content: |
    APT::Periodic::Update-Package-Lists "1";
    APT::Periodic::Unattended-Upgrade "1";
- path: /etc/apt/apt.conf.d/50unattended-upgrades
  content: |
    Unattended-Upgrade::Allowed-Origins {
        "${distro_id} ${distro_codename}-security";
    };
    Unattended-Upgrade::Mail "encode-devops@lists.stanford.edu";
    Unattended-Upgrade::Automatic-Reboot "false";
- path: /etc/cron.d/cloudwatchmon
  content: |
    */5 * * * * nobody /opt/cloudwatchmon/bin/mon-put-instance-stats.py --mem-util --swap-util --disk-space-util --disk-path=/ --from-cron
