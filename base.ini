[app:app]
use = egg:encoded
sqlalchemy.url = postgresql:///encoded
tm.attempts = 3
file_upload_bucket = encoded-files-dev
file_upload_profile_name = encoded-files-upload
elasticsearch.server = localhost:9200
ontology_path = %(here)s/ontology.json
aws_ip_ranges_path = %(here)s/aws-ip-ranges.json
download_proxy = https://download.encodeproject.org/
annotations_path = %(here)s/annotations.json

# Only run ec2metadata on ec2 instances
# XXX really need to reorganise ini files for more reuse
hostname_command = command -v ec2metadata > /dev/null && ec2metadata --public-hostname || hostname

multiauth.policies = session remoteuser accesskey webuser
multiauth.groupfinder = encoded.authorization.groupfinder

multiauth.policy.session.namespace = mailto
multiauth.policy.session.use = encoded.authentication.NamespacedAuthenticationPolicy
multiauth.policy.session.base = pyramid.authentication.SessionAuthenticationPolicy

multiauth.policy.remoteuser.namespace = remoteuser
multiauth.policy.remoteuser.use = encoded.authentication.NamespacedAuthenticationPolicy
multiauth.policy.remoteuser.base = pyramid.authentication.RemoteUserAuthenticationPolicy

multiauth.policy.accesskey.namespace = accesskey
multiauth.policy.accesskey.use = encoded.authentication.NamespacedAuthenticationPolicy
multiauth.policy.accesskey.base = encoded.authentication.BasicAuthAuthenticationPolicy
multiauth.policy.accesskey.check = encoded.authentication.basic_auth_check

multiauth.policy.webuser.use = encoded.authentication.NamespacedAuthenticationPolicy
multiauth.policy.webuser.namespace = webuser
multiauth.policy.webuser.base = encoded.authentication.WebUserAuthenticationPolicy

pyramid.default_locale_name = en

[composite:indexer]
use = egg:encoded#indexer
app = app
path = /index
timeout = 60
set embed_cache.capacity = 5000
set indexer = true

[composite:fileindexer]
use = egg:encoded#indexer
app = app
path = /index_file
timeout = 60
set embed_cache.capacity = 5000
set fileindexer = true

[filter:memlimit]
use = egg:encoded#memlimit
rss_limit = 500MB
