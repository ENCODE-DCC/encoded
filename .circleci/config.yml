version: 2.1

orbs:
    browser-tools: circleci/browser-tools@0.1.0

executors:
  encoded-executor:
    docker:
      - image: circleci/buildpack-deps:trusty
    working_directory: ~/encoded
    environment:
      - BASH_ENV: /home/circleci/.bashrc
      - ES_JAVA_OPTS: -Xms4g -Xmx4g
      - JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64

commands:
  buildout:
    description: A buildout process based on encoded-executor
    steps:
      - checkout
      # Do not use caching for now to avoid potential conflicts/bugs
      - run:
          name: Add apt repositories
          command: |
            sudo apt-get update && sudo apt-get install apt-transport-https software-properties-common
            wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
            echo "deb https://artifacts.elastic.co/packages/5.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-6.x.list
            curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | sudo apt-key add -
            curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
            sudo add-apt-repository -y ppa:openjdk-r/ppa
            sudo apt-get update
      - run:
          name: Install dependencies
          command: |
            sudo apt-get install -y \
              bsdtar \
              elasticsearch \
              graphviz \
              nodejs \
              openjdk-11-jdk \
              postgresql-9.3
            sudo chown -R circleci /etc/elasticsearch
            sed -i '1s;^;export PATH=/usr/share/elasticsearch/bin:/usr/lib/postgresql/9.3/bin:$PATH\n;' $BASH_ENV
            sudo apt-get install -y python3.4-dev python3-pip
            sed -i '1s;^;alias python=python3\n;' $BASH_ENV
      - run:
          name: Run buildout
          command: |
            sudo pip3 install --upgrade pip
            sudo pip3 install -U zc.buildout setuptools
            buildout bootstrap
            bin/buildout
jobs:
  npm-not-bdd:
    executor: encoded-executor
    resource_class: large
    steps:
      - buildout
      - run:
          name: NPM and non ES indexing tests
          command: |
            npm run circleci-test
            bin/test -s -vv -m "not bdd"
  bdd:
    executor: encoded-executor
    resource_class: large
    steps:
      - buildout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: Run bdd tests
          command: |
            bin/test -s -vv -m "bdd" --tb=short \
              --splinter-implicit-wait 10 \
              --splinter-webdriver chrome \
              --splinter-socket-timeout 300 \
              --chrome-options "--headless --disable-gpu --no-sandbox --disable-dev-shm-usage --disable-extensions --whitelisted-ips"
          no_output_timeout: 30m

workflows:
  version: 2
  encoded-tests:
    jobs:
      - npm-not-bdd
      - bdd
