[app:app]
use = config:base.ini#app
# Demo/rc/test/candidate Overrides
accession_factory = ${buildout:accession_factory}
blob_bucket = ${buildout:blob_bucket}
blob_store_profile_name = ${buildout:file_upload_profile_name}
elasticsearch.server = ${buildout:elasticsearch.server}
file_upload_bucket = ${buildout:file_upload_bucket}
file_upload_profile_name = ${buildout:file_upload_profile_name}
external_aws_s3_transfer_allow = ${buildout:external_aws_s3_transfer_allow}
external_aws_s3_transfer_buckets = ${buildout:external_aws_s3_transfer_buckets}
pg_uri = ${buildout:pg_uri}
pds_private_bucket = ${buildout:pds_private_bucket}
pds_public_bucket = ${buildout:pds_public_bucket}
session.secret = ${buildout:session.secret}
snp_search.server = ${buildout:elasticsearch.server}
# Demo/rc/test/candidate vars
indexer.chunk_size = 1024
indexer.processes = 16
local_storage_host = localhost
local_storage_port = 6379
local_storage_redis_index = 1
local_storage_timeout = 5
local_tz = US/Pacific

[composite:indexer]
use = egg:encoded#indexer
app = app
path = /index
# Indexer Overrides
set indexer_short_uuids = ${buildout:indexer_short_uuids}
set queue_type = ${buildout:queue_type}
set queue_server = ${buildout:queue_server}
set queue_port = ${buildout:queue_port}
set queue_host = ${buildout:queue_host}
set queue_worker = ${buildout:queue_worker}
set queue_worker_processes = ${buildout:queue_worker_processes}
set queue_worker_chunk_size = ${buildout:queue_worker_chunk_size} 
set queue_worker_batch_size = ${buildout:queue_worker_batch_size}
set queue_worker_get_size = ${buildout:queue_worker_get_size}
set remote_indexing = ${buildout:remote_indexing}
set remote_indexing_threshold = ${buildout:remote_indexing_threshold}
timeout = ${buildout:timeout}
set timeout = ${buildout:timeout}
# Indexer Vars
set embed_cache.capacity = 25000
set indexer = true
set indexer_initial_log = false
set indexer_initial_log_path = initial-indexing-times.txt
set stage_for_followup = vis_indexer, region_indexer

[composite:visindexer]
use = config:development.ini#visindexer

[composite:regionindexer]
use = config:development.ini#regionindexer

[filter:memlimit]
use = egg:encoded#memlimit
rss_limit = 500MB

[pipeline:main]
pipeline =
    config:production.ini#memlimit
    egg:PasteDeploy#prefix
    app

[pipeline:debug]
pipeline =
    egg:repoze.debug#pdbpm
    app
set pyramid.includes =
    pyramid_translogger

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543
threads = 1

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, encoded, encoded_listener, file_encoded_listener, snovault.batchupgrade

[handlers]
keys = console, fl_batchupgrade

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_encoded]
level = WARN
handlers = console
qualname = encoded
propagate = 0

[logger_encoded_listener]
level = INFO
handlers = console
qualname = snovault.elasticsearch.es_index_listener
propagate = 0

[logger_file_encoded_listener]
level = INFO
handlers = console
qualname = encoded.commands.es_file_index_listener
propagate = 0

[logger_snovault.batchupgrade]
level = INFO
handlers = fl_batchupgrade, console
qualname = snovault.batchupgrade
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_fl_batchupgrade]
class = FileHandler
args = ('batchupgrade.log','a')
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)s [%(name)s][%(threadName)s] %(message)s
