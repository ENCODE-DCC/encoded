###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
accession_factory = encoded.server_defaults.test_accession
use = egg:encoded
sqlalchemy.url = postgresql:///encoded
create_tables = 
#sqlalchemy.url = sqlite://
file_upload_bucket = encoded-files-dev
collection_datastore = elasticsearch
item_datastore = elasticsearch
elasticsearch.server = http://localhost:9200
ontology_path = %(here)s/ontology.json

# Only run ec2metadata on ec2 instances
# XXX really need to reorganise ini files for more reuse
hostname_command = command -v ec2metadata > /dev/null && ec2metadata --public-hostname || hostname

session.secret = %(here)s/session-secret.b64
multiauth.policies = persona session remoteuser accesskey
multiauth.groupfinder = encoded.authorization.groupfinder
multiauth.policy.persona.use = encoded.authentication.NamespacedAuthenticationPolicy
multiauth.policy.persona.base = encoded.persona.PersonaAuthenticationPolicy
multiauth.policy.persona.namespace = persona
multiauth.policy.session.use = encoded.authentication.NamespacedAuthenticationPolicy
multiauth.policy.session.base = pyramid.authentication.SessionAuthenticationPolicy
multiauth.policy.session.namespace = mailto
multiauth.policy.remoteuser.use = encoded.authentication.NamespacedAuthenticationPolicy
multiauth.policy.remoteuser.namespace = remoteuser
multiauth.policy.remoteuser.base = pyramid.authentication.RemoteUserAuthenticationPolicy
multiauth.policy.accesskey.use = encoded.authentication.NamespacedAuthenticationPolicy
multiauth.policy.accesskey.namespace = accesskey
multiauth.policy.accesskey.base = encoded.authentication.BasicAuthAuthenticationPolicy
multiauth.policy.accesskey.check = encoded.authentication.basic_auth_check

allow.list = Everyone
allow.traverse = Everyone
allow.search = Everyone
allow.search_audit = group.submitter
allow.ALL_PERMISSIONS = group.admin

persona.audiences = *.encodedcc.org
#persona.verifier = browserid.LocalVerifier
persona.siteName = ENCODE DCC Submission

postgresql.statement_timeout = 120

# Uncomment to load data at startup
#load_workbook = %(here)s/../documents-export.zip
load_docsdir =
    %(here)s/../dccMetadataImport/data/documents
    %(here)s/../dccMetadataImport/data/ENCODE3docs
## above path will change with incorporation of ENCODE3 docs!!!

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en


[composite:indexer]
use = egg:encoded#indexer
timeout = 60

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543
# Change this to 1 thread when using sqlite.
threads = 8

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, encoded, encoded_listener

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_encoded]
level = WARN
handlers = console
qualname = encoded
propagate = 0

[logger_encoded_listener]
level = DEBUG
handlers = console
qualname = encoded.commands.es_index_listener
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
