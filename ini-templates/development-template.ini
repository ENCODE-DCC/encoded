[app:app]
use = config:base.ini#app
# New
create_tables = true
load_test_only = true
testing = true

indexer.processes =
snovault.load_test_data = encoded.loadxl:load_test_data
snp_search.server = ${elasticsearch.server}

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = true
pyramid.debug_routematch = false

# Override base.ini in buildout.cfg
postgresql.statement_timeout = ${postgresql.statement_timeout}
sqlalchemy.url = ${sqlalchemy.url}
# Direct file transfer from external AWS S3 to internal S3 bucket
external_aws_s3_transfer_allow = ${external_aws_s3_transfer_allow}
external_aws_s3_transfer_buckets = ${external_aws_s3_transfer_buckets}

[pipeline:debug]
pipeline =
    egg:PasteDeploy#prefix
    egg:repoze.debug#pdbpm
    app
set pyramid.includes =
    pyramid_translogger

[composite:main]
use = egg:rutter#urlmap
/ = debug
/_indexer = indexer
/_visindexer = visindexer
/_regionindexer = regionindexer

[composite:indexer]
use = config:base.ini#indexer
set queue_type = Simple
set queue_server = true
set queue_worker = true
set queue_worker_processes = 2
set queue_worker_chunk_size = 1024
set queue_worker_batch_size = 2000

[composite:visindexer]
use = config:base.ini#visindexer

[composite:regionindexer]
use = config:base.ini#regionindexer

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543
threads = 1

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, wsgi, encoded

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_wsgi]
level = DEBUG
handlers =
qualname = wsgi

[logger_encoded]
level = DEBUG
handlers =
qualname = encoded

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
