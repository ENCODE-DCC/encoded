[buildout]
extensions =
    mr.developer
extends = versions.cfg
# XXX https://bitbucket.org/pypa/setuptools/issue/133/find-links-should-override-allow-hosts
allow-hosts =
    *.python.org
    github.com
find-links =
    https://github.com/lrowe/venusian/tarball/1.0.1.dev40#egg=venusian-1.0.1.dev40
    https://github.com/lrowe/splinter/tarball/0.7.3.dev20150610#egg=splinter-0.7.3.dev20150610
    https://github.com/RDFLib/rdflib/tarball/f2bef7a#egg=rdflib-4.2.2.dev0
show-picked-versions = true
update-versions-file = versions.cfg
parts =
    encoded
    production-ini
    production
    production-indexer
    production-secondaryindexer
    production-fileindexer
    ckeditor
    npm-install
    compile-js
    test
    aws
    generate-ontology
    aws-ip-ranges
    download-annotations
develop = .
sources-dir = develop
auto-checkout = snovault

[sources]
behave = git https://github.com/behave/behave.git
behaving = git https://github.com/ggozad/behaving.git
jsonschema = git https://github.com/lrowe/jsonschema_serialize_fork.git
subprocess_middleware = git https://github.com/lrowe/subprocess_middleware.git
subprocess-middleware-node = git https://github.com/lrowe/subprocess-middleware-node.git egg=false
pyramid = git https://github.com/Pylons/pyramid.git
pyramid_multiauth = git https://github.com/mozilla-services/pyramid_multiauth.git
pytest = hg https://bitbucket.org/hpk42/pytest
rdflib = git https://github.com/lrowe/rdflib.git branch=patch-1
rdflib-jsonld = git https://github.com/lrowe/rdflib-jsonld.git branch=patch-1
jsonform = git https://github.com/lrowe/jsonform.git egg=false
webtest = git https://github.com/Pylons/webtest.git
WSGIProxy2 = git https://github.com/lrowe/WSGIProxy2.git
zope.sqlalchemy = git https://github.com/zopefoundation/zope.sqlalchemy.git
pytest-bdd = git https://github.com/lrowe/pytest-bdd.git branch=allow-any-step-order
snovault = git https://github.com/ENCODE-DCC/snovault.git rev=0.29

[versions]
# Hand set versions
pyramid = 1.6a2
# Update .travis.yml and cloud-config.yml when updating buildout
zc.buildout = 2.4.1
setuptools = 18.5
# https://github.com/Pylons/venusuian/issues/40
venusian = 1.0.1.dev40
# https://github.com/RDFLib/rdflib/issues/492
rdflib = 4.2.2.dev0

[encoded]
recipe = zc.recipe.egg
eggs =
    SPARQLWrapper
    encoded
    pyramid
    waitress
    psycopg2
    repoze.debug
    rutter
    pyramid_translogger

interpreter = py

[aws]
recipe = zc.recipe.egg
eggs =
    awscli

[production-ini]
recipe = collective.recipe.template
input = ${buildout:directory}/production.ini.in
output = ${buildout:directory}/production.ini
accession_factory = encoded.server_defaults.test_accession
file_upload_bucket = encoded-files-dev
blob_bucket = encoded-blobs-dev
region_search_instance = region-search-test-v5.instance.encodedcc.org:9200

indexer_processes = 16
indexer_chunk_size = 1024


[production]
recipe = collective.recipe.modwsgi
eggs =
    encoded
    psycopg2
config-file = ${buildout:directory}/production.ini

[production-indexer]
<= production
app_name = indexer

[production-secondaryindexer]
<= production
app_name = secondaryindexer

[production-fileindexer]
<= production
app_name = fileindexer

[ckeditor]
recipe = collective.recipe.cmd
on_install = true
on_update = true
# See http://stackoverflow.com/a/23108309/199100
cmds =
    curl https://s3-us-west-1.amazonaws.com/encoded-build/ckeditor/ckeditor_4.5.5_standard.zip | bsdtar -xf- -C src/encoded/static/build/

[generate-ontology]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    curl -o ontology.json https://s3-us-west-1.amazonaws.com/encoded-build/ontology/ontology-2017-09-27.json

[aws-ip-ranges]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    curl -o aws-ip-ranges.json https://ip-ranges.amazonaws.com/ip-ranges.json

[npm-install]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = NODE_PATH="" npm_config_cache="" npm install

[compile-js]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = NODE_PATH="" npm run build

[test]
recipe = zc.recipe.egg
eggs =
    coverage
    encoded[test]
    psycopg2
    pytest
    pytest-timeout
    pytest-instafail
    pytest-cov
    pytest-bdd
scripts =
    coverage
    py.test=test
    pytest-bdd

# Avoid ``Unix-domain socket path "..." is too long (maximum 103 bytes)``
initialization = import tempfile; tempfile.tempdir = '/tmp'

[download-annotations]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    curl -o annotations.json https://s3-us-west-1.amazonaws.com/encoded-build/annotations/annotations_2016_08_24_ENCSR763ATQ.json
