[buildout]
extensions =
    mr.developer
extends = versions.cfg
# XXX https://bitbucket.org/pypa/setuptools/issue/133/find-links-should-override-allow-hosts
allow-hosts =
    pypi.org
    files.pythonhosted.org
    github.com
find-links =
    https://github.com/lrowe/venusian/tarball/1.0.1.dev40#egg=venusian-1.0.1.dev40
    https://github.com/lrowe/splinter/tarball/0.7.3.dev20150610#egg=splinter-0.7.3.dev20150610
    https://github.com/RDFLib/rdflib/tarball/f2bef7a#egg=rdflib-4.2.2.dev0
show-picked-versions = true
update-versions-file = versions.cfg
parts =
    encoded
    base-ini
    development-ini
    production-ini
    production
    production-indexer
    production-visindexer
    production-regionindexer
    ckeditor
    npm-install
    compile-js
    test
    aws
    generate-ontology
    aws-ip-ranges
    download-annotations
develop = .
sources-dir = develop
auto-checkout = snovault
ini-templates = ${buildout:directory}/ini-templates
es-ip = localhost
es-port = 9201
primary_indexer_queue_type = Simple
primary_indexer_queue_server = true
primary_indexer_queue_worker = true
primary_indexer_queue_worker_processes = 16
primary_indexer_queue_worker_chunk_size = 1024
primary_indexer_queue_worker_batch_size = 5000
primary_indexer_queue_worker_get_size = 2000000
external_aws_s3_transfer_allow = false

[sources]
behave = git https://github.com/behave/behave.git
behaving = git https://github.com/ggozad/behaving.git
jsonschema = git https://github.com/lrowe/jsonschema_serialize_fork.git
subprocess_middleware = git https://github.com/lrowe/subprocess_middleware.git
subprocess-middleware-node = git https://github.com/lrowe/subprocess-middleware-node.git egg=false
pyramid = git https://github.com/Pylons/pyramid.git
pyramid_multiauth = git https://github.com/mozilla-services/pyramid_multiauth.git
pytest = hg https://bitbucket.org/hpk42/pytest
rdflib = git https://github.com/lrowe/rdflib.git branch=patch-1
rdflib-jsonld = git https://github.com/lrowe/rdflib-jsonld.git branch=patch-1
jsonform = git https://github.com/lrowe/jsonform.git egg=false
webtest = git https://github.com/Pylons/webtest.git
WSGIProxy2 = git https://github.com/lrowe/WSGIProxy2.git
zope.sqlalchemy = git https://github.com/zopefoundation/zope.sqlalchemy.git
pytest-bdd = git https://github.com/lrowe/pytest-bdd.git branch=allow-any-step-order
snovault = git https://github.com/ENCODE-DCC/snovault.git branch=SNO-86-escape-search-text

[versions]
# Hand set versions
pyramid = 1.6a2
# https://github.com/Pylons/venusuian/issues/40
venusian = 1.0.1.dev40
# https://github.com/RDFLib/rdflib/issues/492
rdflib = 4.2.2.dev0

[encoded]
recipe = zc.recipe.egg
eggs =
    SPARQLWrapper
    encoded
    pyramid
    waitress
    psycopg2
    repoze.debug
    rutter
    pyramid_translogger

interpreter = py

[aws]
recipe = zc.recipe.egg
eggs =
    awscli

[base-ini]
recipe = collective.recipe.template
input = ${buildout:ini-templates}/base-template.ini
output = ${buildout:directory}/base.ini
annotations_path = ${buildout:directory}/annotations.json
aws_ip_ranges_path = ${buildout:directory}/aws-ip-ranges.json
elasticsearch.server = ${buildout:es-ip}:${buildout:es-port}
file_upload_profile_name = encoded-files-upload
ontology_path = ${buildout:directory}/ontology.json
external_aws_s3_transfer_allow = ${buildout:external_aws_s3_transfer_allow}
external_aws_s3_transfer_buckets = ${buildout:directory}/.aws/direct-external-s3-list
pds_private_bucket = encode-pds-private-dev
pds_public_bucket = encode-pds-public-dev
primary_indexer_queue_type = ${buildout:primary_indexer_queue_type}
primary_indexer_queue_server = ${buildout:primary_indexer_queue_server}
primary_indexer_queue_worker = ${buildout:primary_indexer_queue_worker}
primary_indexer_queue_worker_processes = ${buildout:primary_indexer_queue_worker_processes}
primary_indexer_queue_worker_chunk_size = ${buildout:primary_indexer_queue_worker_chunk_size}
primary_indexer_queue_worker_batch_size = ${buildout:primary_indexer_queue_worker_batch_size}
primary_indexer_queue_worker_get_size = ${buildout:primary_indexer_queue_worker_get_size}

[development-ini]
recipe = collective.recipe.template
input = ${buildout:ini-templates}/development-template.ini
output = ${buildout:directory}/development.ini
elasticsearch.server = ${base-ini:elasticsearch.server}
postgresql.statement_timeout = 20
sqlalchemy.url = postgresql://postgres@:5432/postgres?host=/tmp/snovault/pgdata
external_aws_s3_transfer_allow = ${base-ini:external_aws_s3_transfer_allow}
external_aws_s3_transfer_buckets = ${base-ini:external_aws_s3_transfer_buckets}
pds_private_bucket = ${base-ini:pds_private_bucket}
pds_public_bucket = ${base-ini:pds_public_bucket}

[production-ini]
recipe = collective.recipe.template
input = ${buildout:ini-templates}/production-template.ini
output = ${buildout:directory}/production.ini
accession_factory = encoded.server_defaults.test_accession
blob_bucket = encoded-blobs-dev
elasticsearch.server = ${base-ini:elasticsearch.server}
file_upload_bucket = encoded-files-dev
file_upload_profile_name = ${base-ini:file_upload_profile_name}
session.secret = ${buildout:directory}/session-secret.b64
external_aws_s3_transfer_allow = ${base-ini:external_aws_s3_transfer_allow}
external_aws_s3_transfer_buckets = ${base-ini:external_aws_s3_transfer_buckets}
pds_private_bucket = ${base-ini:pds_private_bucket}
pds_public_bucket = ${base-ini:pds_public_bucket}

[production]
recipe = collective.recipe.modwsgi
eggs =
    encoded
    psycopg2
config-file = ${buildout:directory}/production.ini

[production-indexer]
<= production
app_name = indexer

[production-visindexer]
<= production
app_name = visindexer

[production-regionindexer]
<= production
app_name = regionindexer

[ckeditor]
recipe = collective.recipe.cmd
on_install = true
on_update = true
# See http://stackoverflow.com/a/23108309/199100
cmds =
    curl https://s3-us-west-1.amazonaws.com/encoded-build/ckeditor/ckeditor_4.5.5_standard.zip | bsdtar -xf- -C src/encoded/static/build/

[generate-ontology]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    curl -o ontology.json https://s3-us-west-1.amazonaws.com/encoded-build/ontology/ontology-2019-03-19.json

[aws-ip-ranges]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    curl -o aws-ip-ranges.json https://ip-ranges.amazonaws.com/ip-ranges.json

[npm-install]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = NODE_PATH="" npm_config_cache="" npm ci

[compile-js]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = NODE_PATH="" npm run build

[test]
recipe = zc.recipe.egg
eggs =
    coverage
    encoded[test]
    psycopg2
    pytest
    pytest-timeout
    pytest-instafail
    pytest-cov
    pytest-bdd
scripts =
    coverage
    py.test=test
    pytest-bdd

# Avoid ``Unix-domain socket path "..." is too long (maximum 103 bytes)``
initialization = import tempfile; tempfile.tempdir = '/tmp'

[download-annotations]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    curl -o annotations.json https://s3-us-west-1.amazonaws.com/encoded-build/annotations/annotations_2017_10_10.json
