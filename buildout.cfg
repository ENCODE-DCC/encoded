[buildout]
parts =
    base-ini
    development-ini
    production-ini
    production
    production-indexer
    production-visindexer
    production-regionindexer
    npm-install
    compile-js
    generate-ontology
    aws-ip-ranges
    download-annotations
    cleanup
ini-templates = ${buildout:directory}/ini-templates
es-ip = localhost
es-port = 9201
fe-ip = localhost
pg-uri = postgresql:///encoded
index_procs = 16
index_chunk_size = 512
primary_indexer_queue_type = Simple
primary_indexer_queue_server = true
primary_indexer_queue_worker = true
primary_indexer_queue_worker_processes = ${buildout:index_procs}
primary_indexer_queue_worker_chunk_size = ${buildout:index_chunk_size}
primary_indexer_queue_worker_batch_size = 5000
primary_indexer_queue_worker_get_size = 2000000
external_aws_s3_transfer_allow = false
remote_indexing = false
remote_indexing_threshold = 10001

[base-ini]
recipe = collective.recipe.template
input = ${buildout:ini-templates}/base-template.ini
output = ${buildout:directory}/base.ini
annotations_path = ${buildout:directory}/annotations.json
aws_ip_ranges_path = ${buildout:directory}/aws-ip-ranges.json
elasticsearch.server = ${buildout:es-ip}:${buildout:es-port}
primary_frontend_ip = ${buildout:fe-ip}
file_upload_profile_name = encoded-files-upload
ontology_path = ${buildout:directory}/ontology.json
external_aws_s3_transfer_allow = ${buildout:external_aws_s3_transfer_allow}
external_aws_s3_transfer_buckets = ${buildout:directory}/.aws/direct-external-s3-list
pds_private_bucket = encode-pds-private-dev
pds_public_bucket = encode-pds-public-dev
pg_uri = ${buildout:pg-uri}
primary_indexer_queue_type = ${buildout:primary_indexer_queue_type}
primary_indexer_queue_server = ${buildout:primary_indexer_queue_server}
primary_indexer_queue_worker = ${buildout:primary_indexer_queue_worker}
primary_indexer_queue_worker_processes = ${buildout:primary_indexer_queue_worker_processes}
primary_indexer_queue_worker_chunk_size = ${buildout:primary_indexer_queue_worker_chunk_size}
primary_indexer_queue_worker_batch_size = ${buildout:primary_indexer_queue_worker_batch_size}
primary_indexer_queue_worker_get_size = ${buildout:primary_indexer_queue_worker_get_size}
accel_redirect_header = X-Accel-Redirect
remote_indexing = ${buildout:remote_indexing}
remote_indexing_threshold = ${buildout:remote_indexing_threshold}

[development-ini]
recipe = collective.recipe.template
input = ${buildout:ini-templates}/development-template.ini
output = ${buildout:directory}/development.ini
elasticsearch.server = ${base-ini:elasticsearch.server}
postgresql.statement_timeout = 20
sqlalchemy.url = postgresql://postgres@:5432/postgres?host=/tmp/snovault/pgdata
external_aws_s3_transfer_allow = ${base-ini:external_aws_s3_transfer_allow}
external_aws_s3_transfer_buckets = ${base-ini:external_aws_s3_transfer_buckets}
pds_private_bucket = ${base-ini:pds_private_bucket}
pds_public_bucket = ${base-ini:pds_public_bucket}

[production-ini]
recipe = collective.recipe.template
input = ${buildout:ini-templates}/production-template.ini
output = ${buildout:directory}/production.ini
accession_factory = encoded.server_defaults.test_accession
blob_bucket = encoded-blobs-dev
elasticsearch.server = ${base-ini:elasticsearch.server}
file_upload_bucket = encoded-files-dev
file_upload_profile_name = ${base-ini:file_upload_profile_name}
session.secret = ${buildout:directory}/session-secret.b64
external_aws_s3_transfer_allow = ${base-ini:external_aws_s3_transfer_allow}
external_aws_s3_transfer_buckets = ${base-ini:external_aws_s3_transfer_buckets}
pds_private_bucket = ${base-ini:pds_private_bucket}
pds_public_bucket = ${base-ini:pds_public_bucket}

[production]
recipe = collective.recipe.modwsgi
config-file = ${buildout:directory}/production.ini

[production-indexer]
<= production
app_name = indexer

[production-visindexer]
<= production
app_name = visindexer

[production-regionindexer]
<= production
app_name = regionindexer

[generate-ontology]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    curl -o ontology.json https://s3-us-west-1.amazonaws.com/encoded-build/ontology/ontology-2020-11-11.json

[aws-ip-ranges]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    curl -o aws-ip-ranges.json https://ip-ranges.amazonaws.com/ip-ranges.json

[npm-install]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = NODE_PATH="" npm_config_cache="" npm ci

[compile-js]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = NODE_PATH="" npm run build

[download-annotations]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    curl -o annotations.json https://s3-us-west-1.amazonaws.com/encoded-build/annotations/annotations_2020_10_21.json

[cleanup]
# Even if we don't need the bin or eggs dirs, buildout still creates them
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    rm -rf bin eggs
