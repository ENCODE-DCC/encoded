[app:app]
accel_redirect_header = X-Accel-Redirect
accession_factory = encoded.server_defaults.test_accession
annotations_path = /srv/encoded/annotations.json
auth0.siteName = ENCODE DCC Submission
blob_bucket = encoded-blobs-dev
blob_store_profile_name = encoded-files-upload
download_proxy = https://download.encodeproject.org/
elasticsearch.server = localhost:9201
embed_cache.capacity = 25000
external_aws_s3_transfer_allow = false
external_aws_s3_transfer_buckets = /srv/encoded/.aws/direct-external-s3-list
file_upload_bucket = encoded-files-dev
file_upload_profile_name = encoded-files-upload
genomic_data_service = http://data-service.demo.regulomedb.org
hostname_command = command -v ec2metadata > /dev/null && ec2metadata --public-hostname || hostname
indexer.chunk_size = 1024
indexer.processes = 16
local_storage_host = localhost
local_storage_port = 6379
local_storage_redis_index = 1
local_storage_timeout = 5
local_tz = US/Pacific
multiauth.groupfinder = encoded.authorization.groupfinder
multiauth.policies = auth0 session remoteuser accesskey
multiauth.policy.accesskey.base = encoded.authentication.BasicAuthAuthenticationPolicy
multiauth.policy.accesskey.check = encoded.authentication.basic_auth_check
multiauth.policy.accesskey.namespace = accesskey
multiauth.policy.accesskey.use = encoded.authentication.NamespacedAuthenticationPolicy
multiauth.policy.auth0.base = encoded.auth0.Auth0AuthenticationPolicy
multiauth.policy.auth0.namespace = auth0
multiauth.policy.auth0.use = encoded.authentication.NamespacedAuthenticationPolicy
multiauth.policy.remoteuser.base = pyramid.authentication.RemoteUserAuthenticationPolicy
multiauth.policy.remoteuser.namespace = remoteuser
multiauth.policy.remoteuser.use = encoded.authentication.NamespacedAuthenticationPolicy
multiauth.policy.session.base = pyramid.authentication.SessionAuthenticationPolicy
multiauth.policy.session.namespace = mailto
multiauth.policy.session.use = encoded.authentication.NamespacedAuthenticationPolicy
pds_private_bucket = encode-pds-private-dev
pds_public_bucket = encode-pds-public-dev
postgresql.statement_timeout = 120
pyramid.default_locale_name = en
retry.attempts = 3
session.secret = /srv/encoded/session-secret.b64
small_db_path = /srv/encoded/src/encoded/tests/data/inserts/sorted_uuids.tsv
snp_search.server = localhost:9201
sqlalchemy.url = postgresql:///encoded
use = egg:encoded
use_small_db = false
[composite:indexer]
app = app
path = /index
set embed_cache.capacity = 25000
set indexer = true
set indexer_initial_log = true
set indexer_initial_log_path = /srv/encoded/initial-indexing-times.txt
set indexer_short_uuids = 0
set queue_host = localhost
set queue_port = 6379
set queue_server = true
set queue_type = Simple
set queue_worker = true
set queue_worker_batch_size = 5000
set queue_worker_chunk_size = 1024
set queue_worker_get_size = 2500000
set queue_worker_processes = 24
set remote_indexing = false
set remote_indexing_threshold = 10001
set stage_for_followup = vis_indexer, region_indexer
set timeout = 60
timeout = 60
use = egg:encoded#indexer
[composite:regionindexer]
app = app
path = /index_region
set embed_cache.capacity = 5000
set regionindexer = true
set remote_indexing = false
set timeout = 60
timeout = 60
use = egg:encoded#indexer
[composite:visindexer]
app = app
path = /index_vis
set embed_cache.capacity = 5000
set remote_indexing = false
set timeout = 60
set visindexer = true
timeout = 60
use = egg:encoded#indexer
[filter:memlimit]
rss_limit = 500MB
use = egg:encoded#memlimit
[formatter_generic]
format = %(levelname)s [%(name)s][%(threadName)s] %(message)s
[formatters]
keys = generic
[handler_console]
args = (sys.stderr,)
class = StreamHandler
formatter = generic
level = NOTSET
[handler_fl_batchupgrade]
args = ('batchupgrade.log','a')
class = FileHandler
formatter = generic
level = NOTSET
[handlers]
keys = console, fl_batchupgrade
[logger_encoded]
handlers = console
level = WARN
propagate = 0
qualname = encoded
[logger_encoded_listener]
handlers = console
level = INFO
propagate = 0
qualname = snovault.elasticsearch.es_index_listener
[logger_file_encoded_listener]
handlers = console
level = INFO
propagate = 0
qualname = encoded.commands.es_file_index_listener
[logger_root]
handlers = console
level = WARN
[logger_snovault.batchupgrade]
handlers = fl_batchupgrade, console
level = INFO
propagate = 0
qualname = snovault.batchupgrade
[loggers]
keys = root, encoded, snovault.batchupgrade, encoded_listener, file_encoded_listener
[pipeline:debug]
pipeline = egg:repoze.debug#pdbpm app
set pyramid.includes = pyramid_translogger
[pipeline:main]
pipeline = memlimit egg:PasteDeploy#prefix app
[server:main]
host = 0.0.0.0
port = 6543
threads = 1
use = egg:waitress#main

